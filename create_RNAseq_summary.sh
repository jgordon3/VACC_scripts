#!/bin/bash
#$ -N RNAseq_summary
#$ -cwd
#$ -j Y
# Request [num] amount of [type] nodes
#$ -pe threads 1
#Creates 1 summary from multiple "align_summary.txt" files generated by TOPHAT
# Joins htseq results into 1 table (column headings are file names)
# Can be launched by for loop : for f in *_TOPHAT_OUT; do qsub ~/scripts/create_RNAseq_summary.sh $f; done
# or by launch_RNAseq_pipeline.sh script

TOPHAT_FOLDER=$1
ABRV_NAME=${TOPHAT_FOLDER%_TOPHAT_OUT}

#options: experiment name
SUMMARY=ALIGNMENT_SUMMARY.txt
# Column headings
# htseq join

HTSEQ_TABLE=HTSEQ_TABLE.txt
HTSEQ_FILE=$TOPHAT_FOLDER/*"_htseq_counts.txt"
ALIGN_SUM=$TOPHAT_FOLDER/*"align_summary.txt"

FASTQ=$(cat $ALIGN_SUM | grep "FASTQ:")
GENOME=$(cat $ALIGN_SUM | grep "GENOME:")
REF_GTF=$(cat $ALIGN_SUM | grep "GTF:")
TYPE=$(cat $ALIGN_SUM | grep "TYPE:")
TOPHAT_VERSION=$(cat $ALIGN_SUM | grep "VERSION:")

#fix these for multiples
# if [ "$TYPE" = "PE100" ]; then data is pairended....
MAPPED_READS=$(cat $ALIGN_SUM | grep "Mapped")
INPUT_READS=$(cat $ALIGN_SUM | grep "Input")
ALIGNED_PAIRS=$(cat $ALIGN_SUM | grep "Aligned pairs")

if [ -e $SUMMARY ]; then
        printf "%s\t" "$FASTQ" "$GENOME" "REF_GTF" "$TYPE" "$INPUT_READS" "$MAPPED_READS" "$ALIGNED_PAIRS" "$TOPHAT_VERSION" >> $SUMMARY
        printf "\n" >> $SUMMARY
    else
        printf "%s\t" "FILE" "GENOME" "REFERENCE" "TYPE" "INPUT_READS" "MAPPED_READS" "ALIGNED_PAIRS" >> $SUMMARY
        printf "\n" >> $SUMMARY
        printf "%s\t" "$FASTQ" "$GENOME" "REF_GTF" "$TYPE" "$INPUT_READS" "$MAPPED_READS" "$ALIGNED_PAIRS" "$TOPHAT_VERSION" >> $SUMMARY
        printf "\n" >> $SUMMARY
fi


#write column headings after join
if [ -e $HTSEQ_TABLE ]; then
        COLUMN_NAMES=$(head -n 1 $HTSEQ_TABLE);
        tail -n +2 $HTSEQ_TABLE >> tmp
        awk 'BEGIN {FS = " "; OFS = "\t"} NR == FNR {f[$1] = $0; next} ; $1 in f {print f[$1], $2}' tmp $HTSEQ_FILE > tmp2
        printf "%s\t" "$COLUMN_NAMES" "$ABRV_NAME" > $HTSEQ_TABLE; printf "\n" >> $HTSEQ_TABLE;
        cat tmp2 >> $HTSEQ_TABLE;
        rm tmp tmp2;
    else
        printf "%s\t" "GENEID" "$ABRV_NAME" > $HTSEQ_TABLE; printf "\n" >> $HTSEQ_TABLE;
        awk 'BEGIN {FS = " "; OFS = "\t"} {print $1,$2}' $HTSEQ_FILE >> $HTSEQ_TABLE
fi
#cat $HTSEQ_TABLE >> NAMES_tmp
#mv NAMES_tmp >> $HTSEQ_TABLE
